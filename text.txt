﻿<Page x:Class="University.Login.Login"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:University.Login"
      xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
      mc:Ignorable="d"
      Background="#eff1f4"
      Title="Авторизация" d:DesignHeight="450" d:DesignWidth="800">

    <Page.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="14px" />
                <Setter Property="FontFamily" Value="/Resources/#Stapel" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>


            <Style x:Key="ErrorTextBlock" TargetType="TextBlock">
                <Setter Property="Foreground" Value="#F44336" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="FontFamily" Value="/Resources/#Inter" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <Style x:Key="Input" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                <Setter Property="FontSize" Value="13" />
                <Setter Property="material:HintAssist.FontFamily" Value="/Resources/#Inter" />
                <Setter Property="material:HintAssist.HelperTextFontSize" Value="13" />
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="#1E56A0" />
                        <Setter Property="material:HintAssist.Foreground" Value="#1E56A0" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InputPassword" TargetType="PasswordBox"
                   BasedOn="{StaticResource MaterialDesignOutlinedPasswordBox}">
                <Setter Property="FontSize" Value="13" />
                <Setter Property="material:HintAssist.FontFamily" Value="/Resources/#Inter" />
                <Setter Property="material:HintAssist.HelperTextFontSize" Value="13" />
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="#1E56A0" />
                        <Setter Property="material:HintAssist.Foreground" Value="#1E56A0" />
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Page.Resources>

    <StackPanel
        Width="250"
        Height="Auto"
        MaxWidth="250"
        HorizontalAlignment="Center"
        VerticalAlignment="Center">
        <material:Card Padding="20"
                       UniformCornerRadius="10">

            <StackPanel>
                <TextBlock Text="Вход"
                           FontSize="30"
                           TextAlignment="Center"
                           Margin="0 0 0 50"
                           Padding="5"
                           Foreground="#163172"
                           FontWeight="Bold"
                           FontFamily="/Resources/#Stapel">
                </TextBlock>

                <toolkit:MaskedTextBox Name="tbLogin"
                                       Style="{StaticResource Input}"
                                       material:TextFieldAssist.HasClearButton="True"
                                       material:HintAssist.Hint="Номер телефона"
                                       Mask="+7(000)000-00-00" />

                <!--<TextBox
                Name="tbLogin"
                Style="{StaticResource Input}"
                material:HintAssist.Hint="Номер телефона"
                Margin="0 0 0 5"></TextBox>-->

                <TextBlock
                    Style="{StaticResource ErrorTextBlock}"
                    Text=""
                    Name="tbErrorLogin"
                    Margin="0 0 0 20">
                </TextBlock>

                <PasswordBox
                    Name="tbPassword"
                    Style="{StaticResource InputPassword}"
                    material:HintAssist.Hint="Пароль"
                    Margin="0 0 0 5">
                </PasswordBox>

                <TextBlock Style="{StaticResource ErrorTextBlock}"
                           Text=""
                           Name="tbErrorPassword"
                           Margin="0 0 0 20" />
                
                <Button
                    x:Name="btLogin"
                    BorderBrush="#163172"
                    Background="#1E56A0"
                    Width="200"
                    Height="40"
                    Margin="0 0 0 10"
                    FontFamily="/Resources/#Inter"
                    Content="Войти" Click="btLogin_Click"/>
                
                <Button
                    Click="BtnRegister_OnClick"
                    x:Name="btnRegister"
                    BorderBrush="#163172"
                    Background="#D6E4F0"
                    Width="200"
                    Foreground="#163172"
                    Height="40"
                    FontFamily="/Resources/#Inter"
                    Content="Регистрация"/>
                
            </StackPanel>
        </material:Card>
    </StackPanel>
</Page>﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using MaterialDesignThemes.Wpf;
using Microsoft.EntityFrameworkCore;
using University.Cards;
using University.Database;
using University.Main;

namespace University.Login
{
    /// <summary>
    /// Логика взаимодействия для Login.xaml
    /// </summary>
    public partial class Login : Page
    {
        UniversityContext db;
        MainWindow mainWindow;

        public Login(MainWindow main)
        {
            InitializeComponent();
            db = new UniversityContext();
            mainWindow = main;
        }

        private async void btLogin_Click(object sender, RoutedEventArgs e)
        {
            string phoneNumber = tbLogin.Text;
            if (!tbLogin.IsMaskCompleted)
            {
                tbErrorLogin.Text = "Номер телефона не может быть пустым!";
                //MessageBox.Show("Поле не может быть пустым!", "", MessageBoxButton.OK, MessageBoxImage.Error);
                return;
            }

            var user = await db.Employees.FirstOrDefaultAsync(u => u.PhoneNumber == phoneNumber);
            var customer = await db.Customers.FirstOrDefaultAsync(a => a.PhoneNumber == phoneNumber);

            if (user == null && customer == null)
            {
                tbErrorLogin.Text = "Аккаунта с таким телефоном не существует!";
                return;
            }
    
            if ( user != null && phoneNumber == user.PhoneNumber)
            {
                if (tbPassword.Password.Trim() == user.Password)
                    mainWindow.Frame.Content = new AdminPage(user);
                else tbErrorPassword.Text = "Неверный пароль!";
            }

            else if (customer!= null && phoneNumber == customer.PhoneNumber)
            {
                if (tbPassword.Password.Trim() == customer.Password)
                    mainWindow.Frame.Content = new CustomerPage(customer);
                else tbErrorPassword.Text = "Неверный пароль";
            }
            else MessageBox.Show("Вход нельзя!", "", MessageBoxButton.OK, MessageBoxImage.Error);
        }

        private async void BtnRegister_OnClick(object sender, RoutedEventArgs e)
        {
            var dialog = new RegisterDialog();
            if (dialog.ShowDialog() == true)
            {
                var customer = await db.Customers.FirstOrDefaultAsync(a => a.PhoneNumber == dialog.tbPhoneNumber.Text.Trim());
                mainWindow.Frame.Content = new CustomerPage(customer);
            }
        }
    }
}<Page x:Class="University.Main.AdminPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:University.Main"
      xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
      mc:Ignorable="d"
      Title="AdminPage" d:DesignHeight="450" d:DesignWidth="800">

    <Page.Resources>

        <ResourceDictionary>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="14px" />
                <Setter Property="FontFamily" Value="/Resources/#Stapel" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <Style TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Foreground" Value="#163172" />
                <Setter Property="FontFamily" Value="/Resource/#Inter" />
                <Setter Property="Background" Value="#D6E4F0" />
                <Setter Property="BorderBrush" Value="#D6E4F0" />
            </Style>


            <Style x:Key="ErrorTextBlock" TargetType="TextBlock">
                <Setter Property="Foreground" Value="#F44336" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="FontFamily" Value="/Resources/#Inter" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <Style x:Key="Input" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="material:HintAssist.FontFamily" Value="/Resources/#Inter" />
                <Setter Property="material:HintAssist.HelperTextFontSize" Value="13" />
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="#1E56A0" />
                        <Setter Property="material:HintAssist.Foreground" Value="#1E56A0" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InputCB" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="material:HintAssist.FontFamily" Value="/Resources/#Inter" />
                <Setter Property="material:HintAssist.HelperTextFontSize" Value="13" />
                <Style.Triggers>
                    <Trigger Property="IsSelectionActive" Value="True">
                        <Setter Property="BorderBrush" Value="#1E56A0" />
                        <Setter Property="material:HintAssist.Foreground" Value="#1E56A0" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="#1E56A0" />
                        <Setter Property="material:HintAssist.Foreground" Value="#1E56A0" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TabItemStyle" TargetType="TabItem"
                   BasedOn="{StaticResource MaterialDesignNavigationRailTabItem}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="TextElement.Foreground" Value="#163172" />
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Page.Resources>
    
    

    <TabControl
        SelectionChanged="Selector_OnSelectionChanged"
        TabStripPlacement="Left"
        Style="{StaticResource MaterialDesignNavigatilRailTabControl}"
        material:ColorZoneAssist.Mode="Standard"
        Background="#D6E4F0"
        material:ShadowAssist.ShadowDepth="Depth3">

        <TabItem Name="tiEmployee"
                 Style="{StaticResource TabItemStyle}"
                 Header="{material:PackIcon Kind=AccountPlus, Size=24}">


            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*" />
                    <ColumnDefinition Width="10*" />
                </Grid.ColumnDefinitions>
                <!-- Поле добавления сотрудника -->
                <StackPanel>
                    <material:Card
                        Margin="30 40 10 0"
                        Padding="20"
                        Background="#F6F6F6"
                        UniformCornerRadius="10">
                        <StackPanel>
                            <TextBlock
                                Foreground="#163172"
                                FontSize="20"
                                FontWeight="Bold"
                                Text="Добавление сотрудника"
                                HorizontalAlignment="Center"
                                FontFamily="/Resources/#Stapel" />

                            <TextBox
                                x:Name="tbSurname"
                                Style="{StaticResource Input}"
                                material:HintAssist.Hint="Фамилия"
                                Margin="30 10 30 10"
                                Padding="8">
                            </TextBox>

                            <TextBox
                                x:Name="tbName"
                                Style="{StaticResource Input}"
                                material:HintAssist.Hint="Имя"
                                Margin="30 10 30 10"
                                Padding="8">
                            </TextBox>

                            <TextBox
                                Name="tbPatronimyc"
                                Style="{StaticResource Input}"
                                material:HintAssist.Hint="Отчесвто"
                                Margin="30 10 30 10"
                                Padding="8" />

                            <toolkit:MaskedTextBox
                                Name="tbPhoneNumber"
                                Style="{StaticResource Input}"
                                material:HintAssist.Hint="Номер телефона"
                                Mask="+7(000)000-00-00"
                                Margin="30 10 30 10"
                                Padding="8" />

                            <TextBox
                                Name="tbPassword"
                                Style="{StaticResource Input}"
                                material:HintAssist.Hint="Пароль"
                                Margin="30 10 30 10"
                                Padding="8" />

                            <ComboBox
                                ItemsSource="{Binding}"
                                Name="cbRole"
                                material:HintAssist.Hint="Должность"
                                Margin="30 10 30 10"
                                Padding="8"
                                Style="{StaticResource InputCB}" />

                            <Button
                                Click="BtAddEmployee_OnClick"
                                Name="btAddEmployee"
                                FontFamily="/Resources/#Inter"
                                BorderBrush="#163172"
                                Background="#1E56A0"
                                Content="Добавить"
                                Margin="40 10 40 0" />


                        </StackPanel>
                    </material:Card>

                </StackPanel>

                <StackPanel
                    Grid.Column="1">
                    <TextBlock
                        Text="Сотрудники"
                        HorizontalAlignment="Center"
                        Foreground="#163172"
                        FontSize="24"
                        FontWeight="Bold"
                        Margin="0 10 0 0" />

                    <ScrollViewer VerticalScrollBarVisibility="Visible"
                                  Height="700">
                        <StackPanel Name="StackEmployee">

                        </StackPanel>
                    </ScrollViewer>

                    <!-- <DataGrid -->
                    <!--     Grid.Column="1" -->
                    <!--     Name="viewEmployee" -->
                    <!--     /> -->
                    <!-- <ListView -->
                    <!--     Name="viewEmployee"> -->
                    <!--     <ListView.View> -->
                    <!--         <GridView> -->
                    <!--             <GridViewColumn  -->
                    <!--                 DisplayMemberBinding="{Binding Path=Surname}" -->
                    <!--                 Header="Фамилия"/> -->
                    <!--             <GridViewColumn  -->
                    <!--                 DisplayMemberBinding="{Binding Path=Name}" -->
                    <!--                 Header="Имя"/> -->
                    <!--             <GridViewColumn  -->
                    <!--                 DisplayMemberBinding="{Binding Path=Patronymic}" -->
                    <!--                 Header="Отчество"/> -->
                    <!--             <GridViewColumn  -->
                    <!--                 DisplayMemberBinding="{Binding Path=PhoneNumber}" -->
                    <!--                 Header="Номер"/> -->
                    <!--             <GridViewColumn  -->
                    <!--                 DisplayMemberBinding="{Binding Path=Password}" -->
                    <!--                 Header="Пароль"/> -->
                    <!--             <GridViewColumn  -->
                    <!--                 DisplayMemberBinding="{Binding Path=Role}" -->
                    <!--                 Header="Должность"/> -->
                    <!--         </GridView> -->
                    <!--     </ListView.View> -->
                    <!-- </ListView> -->
                </StackPanel>
            </Grid>
        </TabItem>

        <TabItem
            Style="{StaticResource TabItemStyle}"
            Name="tiProvider"
            Header="{material:PackIcon Kind=TruckFast, Size=35}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <StackPanel>
                    <material:Card
                        Margin="30 40 10 0"
                        Padding="20"
                        Background="#F6F6F6"
                        UniformCornerRadius="10">
                        <StackPanel>
                            <TextBlock
                                Foreground="#163172"
                                FontSize="20"
                                FontWeight="Bold"
                                Text="Добавление поставщика"
                                HorizontalAlignment="Center"
                                FontFamily="/Resources/#Stapel" />

                            <TextBox
                                x:Name="tbProviderName"
                                Style="{StaticResource Input}"
                                material:HintAssist.Hint="Название организации"
                                Margin="30 10 30 10"
                                Padding="8">
                            </TextBox>

                            <Button
                                Click="BtAddProvider_OnClick"
                                Name="btAddProvider"
                                FontFamily="/Resources/#Inter"
                                BorderBrush="#163172"
                                Background="#1E56A0"
                                Content="Добавить"
                                Margin="40 10 40 0" />


                        </StackPanel>
                    </material:Card>
                </StackPanel>

                <StackPanel
                    Grid.Column="1">
                    <TextBlock
                        Text="Поставщики"
                        HorizontalAlignment="Center"
                        Foreground="#163172"
                        FontSize="24"
                        FontWeight="Bold"
                        Margin="0 10 0 0" />

                    <ScrollViewer VerticalScrollBarVisibility="Visible"
                                  Height="700">
                        <StackPanel Name="StackProvider">

                        </StackPanel>
                    </ScrollViewer>
                </StackPanel>
            </Grid>
        </TabItem>

        <TabItem
            Style="{StaticResource TabItemStyle}"
            Name="tiCategory"
            Header="{material:PackIcon Kind=CarCog, Size=35}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <StackPanel>
                    <material:Card
                        Margin="30 40 10 0"
                        Padding="20"
                        Background="#F6F6F6"
                        UniformCornerRadius="10">
                        <StackPanel>
                            <TextBlock
                                Foreground="#163172"
                                FontSize="20"
                                FontWeight="Bold"
                                Text="Добавление товара"
                                TextAlignment="Center"
                                FontFamily="/Resources/#Stapel" />

                            <TextBox
                                x:Name="tbAutopartName"
                                Style="{StaticResource Input}"
                                material:HintAssist.Hint="Название запчасти"
                                Margin="30 10 30 10"
                                Padding="8">
                            </TextBox>

                            <TextBox
                                x:Name="tbPrice"
                                PreviewTextInput="NumberValidationTextBox"
                                Style="{StaticResource Input}"
                                material:HintAssist.Hint="Цена"
                                Margin="30 10 30 10"
                                Padding="8">
                            </TextBox>

                            <TextBox
                                x:Name="tbCount"
                                MaxLength="3"
                                PreviewTextInput="NumberValidationTextBox"
                                Style="{StaticResource Input}"
                                material:HintAssist.Hint="Количество"
                                Margin="30 10 30 10"
                                Padding="8">
                            </TextBox>

                            <ComboBox
                                ItemsSource="{Binding}"
                                Name="cbCategory"
                                material:HintAssist.Hint="Категория"
                                Margin="30 10 30 10"
                                Padding="8"
                                Style="{StaticResource InputCB}" />

                            <ComboBox
                                ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}"
                                Name="cbProvider"
                                material:HintAssist.Hint="Поставщик"
                                Margin="30 10 30 10"
                                Padding="8"
                                Style="{StaticResource InputCB}" />

                            <Button
                                Click="BtAddAutopart_OnClick"
                                Name="btAddAutopart"
                                FontFamily="/Resources/#Inter"
                                BorderBrush="#163172"
                                Background="#1E56A0"
                                Content="Добавить"
                                Margin="40 10 40 0" />
                        </StackPanel>
                    </material:Card>
                </StackPanel>

                <StackPanel
                    Grid.Column="1">
                    <TextBlock
                        Text="Товары"
                        HorizontalAlignment="Center"
                        Foreground="#163172"
                        FontSize="24"
                        FontWeight="Bold"
                        Margin="0 10 0 0" />

                    <ScrollViewer VerticalScrollBarVisibility="Visible"
                                  Height="700">
                        <StackPanel Name="StackAutopart">

                        </StackPanel>
                    </ScrollViewer>
                </StackPanel>
            </Grid>
        </TabItem>
        
        <TabItem
            Name="tiFinance"
            Style="{StaticResource TabItemStyle}"
            Header="{material:PackIcon Kind=Cash, Size=35}">
            
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                
                <StackPanel
                    Margin="15">
                    
                    <TextBlock
                        Text="Доходы/расходы"
                        HorizontalAlignment="Center"
                        Foreground="#163172"
                        FontSize="24"
                        FontWeight="Bold"
                        Margin="0 10 0 0" />
                    
                    <ScrollViewer VerticalScrollBarVisibility="Visible"
                                  Height="700">
                        <StackPanel Name="StackFinance">

                        </StackPanel>
                    </ScrollViewer>
                </StackPanel>
                
                
                <StackPanel Grid.Column="1"
                            Margin="15 25 15 15">
                    <TextBlock
                        Name="txtResultFinance"
                        FontSize="16"
                        Text="Итого: 12312 руб."/>                
                    
                    <Button
                        Click="BtnExport_OnClick"
                        Name="btnExport"
                        FontFamily="/Resources/#Inter"
                        BorderBrush="#163172"
                        Background="#1E56A0"
                        Content="Экспорт"/>
                </StackPanel>
                
            </Grid>
        </TabItem>
    </TabControl>
</Page>using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using Microsoft.EntityFrameworkCore;
using OfficeOpenXml;
using OfficeOpenXml.Style;
using University.Cards;
using University.Database;

namespace University.Main
{
    public partial class AdminPage : Page
    {
        Employee LoggedUser;
        private UniversityContext db;

        public AdminPage(Employee loggedUser)
        {
            InitializeComponent();
            this.LoggedUser = loggedUser;
            db = new UniversityContext();
            //Заполнение вкладки "Сотрудники"
            cbRole.DataContext = db.Roles.ToList();
            cbRole.DisplayMemberPath = "RoleName";
            cbRole.SelectedValuePath = "IdRole";
            cbRole.SelectedIndex = 0;
            SetEmployee();
            //Заполнение вкладки "Поставщики"
            SetProvider();
            //Заполнение вкладки "Товары"
            UpdateComboBoxesInAutopart();
            SetAutopart();
            //Заполнение вкладки "Доходы\Расходы"
            SetFinance();
        }

        public void UpdateComboBoxesInAutopart()
        {
            cbCategory.DataContext = db.Categories.ToList();
            cbCategory.DisplayMemberPath = "CategoryName";
            cbCategory.SelectedValuePath = "IdCategory";
            cbCategory.SelectedIndex = 0;

            cbProvider.DataContext = db.Providers.ToList();
            cbProvider.DisplayMemberPath = "ProviderName";
            cbProvider.SelectedValuePath = "IdProvider";
            cbProvider.SelectedIndex = 0;
        }
        private void SetEmployee()
        {
            StackEmployee.Children.Clear();
            foreach (var employee in db.Employees.Include(employee => employee.Role))
            {
                EmployeeCard cardEmployee = new EmployeeCard(LoggedUser)
                {
                    Employee = employee,
                    Password = employee.Password,
                    PhoneNumber = employee.PhoneNumber,
                    Role = employee.Role.RoleName,
                    FullName = $"{employee.Surname} {employee.Name} {employee.Patronymic}"
                };
                StackEmployee.Children.Add(cardEmployee);
            }
        }
        private void SetProvider()
        {
            StackProvider.Children.Clear();
            foreach (var provider in db.Providers)
            {
                ProviderCard cardProvider = new ProviderCard(LoggedUser)
                {
                    _Provider = provider,
                    ProviderName = provider.ProviderName
                };
                StackProvider.Children.Add(cardProvider);
            }
        }

        private void SetAutopart()
        {
            StackAutopart.Children.Clear();

            foreach (var autopart in db.Autoparts
                         .Include(autopart => autopart.Category)
                         .Include(autopart => autopart.Provider)
                         .ToList())
            {
                if (autopart.Count > 0)
                {
                    AutopartCard cardAutopart = new AutopartCard()
                    {
                        _Autopart = autopart,
                        _Category = autopart.Category,
                        _Provider = autopart.Provider,
                        Count = autopart.Count,
                        Price = autopart.Price,
                        AutopartName = autopart.AutopartName,
                        CategoryName = autopart.Category.CategoryName,
                        ProviderName = autopart.Provider.ProviderName
                    };
                    StackAutopart.Children.Add(cardAutopart);
                }
            }
        }
        private void SetFinance()
        {
            StackFinance.Children.Clear();
            decimal FullResult = 0;
            foreach (var accounting in db.Accountings.OrderBy(accounting => accounting.RecordDate))
            {
                var result = accounting.Profit == Decimal.Zero
                    ? accounting.Expenditure.Value
                    : accounting.Profit.Value;

                FullResult += result;

                FinanceCard financeCard = new FinanceCard(accounting.RecordDate.Value.Date.ToString("dd MMMM yyyy"), result);
                StackFinance.Children.Add(financeCard);
            }

            txtResultFinance.Text = $"Итог: {FullResult.ToString()} руб.";
        }

        private async void BtAddEmployee_OnClick(object sender, RoutedEventArgs e)
        {
            var user = await db.Employees.Where(u => u.PhoneNumber == tbPhoneNumber.Text).FirstOrDefaultAsync();
            if (user == null)
            {
                if (tbSurname.Text == ""
                    || tbSurname.Text == ""
                    || tbName.Text == ""
                    || tbPassword.Text == "")
                {
                    MessageBox.Show("Не все поля заполнены!",
                        "Ашипка =(",
                        MessageBoxButton.OK,
                        MessageBoxImage.Error);
                }
                else
                {
                    if (!Regex.IsMatch(tbSurname.Text.Trim(), "^[А-Яа-яёЁ]+$")
                        || !Regex.IsMatch(tbName.Text.Trim(), "^[А-Яа-яёЁ]+$")
                        || !Regex.IsMatch(tbPatronimyc.Text.Trim(), "^[А-Яа-яёЁ]+$"))
                        MessageBox.Show("ФИО должно быть введено русскими буквами!",
                            "Ашипка =(",
                            MessageBoxButton.OK,
                            MessageBoxImage.Error);
                    else if (!Regex.IsMatch(tbPassword.Text.Trim(), "^[a-zA-Z0-9_.-]+$"))
                        MessageBox.Show("В пароле могут использоваться только английские символы, цфиры и '-_'!",
                            "Ашипка =(",
                            MessageBoxButton.OK,
                            MessageBoxImage.Error);
                    else
                    {
                        if (tbSurname.Text.Trim().Length > 30
                            || tbSurname.Text.Trim().Length > 30
                            || tbName.Text.Trim().Length > 30
                            || tbPassword.Text.Trim().Length > 30)
                            MessageBox.Show("Значения в некоторых полях слишком длинные!",
                                "Ашипка =(",
                                MessageBoxButton.OK, MessageBoxImage.Error);
                        else
                        {
                            db.Employees.Add(new Employee
                            {
                                Surname = tbSurname.Text.Trim(),
                                Name = tbName.Text.Trim(),
                                Patronymic = tbPatronimyc.Text.Trim(),
                                PhoneNumber = tbPhoneNumber.Text.Trim(),
                                Password = tbPassword.Text.Trim(),
                                RoleId = (int) cbRole.SelectedValue
                            });
                            await db.SaveChangesAsync();
                            SetEmployee();
                        }
                    }
                }
            }
            else
                MessageBox.Show("Пользователь с таким номером телефона уже уществует!",
                    "Ашипка =(",
                    MessageBoxButton.OK,
                    MessageBoxImage.Error);
        }

        private async void BtAddProvider_OnClick(object sender, RoutedEventArgs e)
        {
            var prov = await db.Providers.Where(p => p.ProviderName == tbProviderName.Text.Trim())
                .FirstOrDefaultAsync();
            if (prov == null)
            {
                if (tbProviderName.Text.Trim() != "")
                {
                    if (tbProviderName.Text.Trim().Length <= 30)
                    {
                        db.Providers.Add(new Provider
                        {
                            ProviderName = tbProviderName.Text.Trim()
                        });
                        await db.SaveChangesAsync();
                        //Обновление комбобоксов на странице с товарами
                        UpdateComboBoxesInAutopart();
                        //Обновление карточек поставщиков
                        SetProvider();
                    }
                    else
                        MessageBox.Show("Название поставщика должно быть менше 30 символов!", "=(",
                            MessageBoxButton.OK, MessageBoxImage.Warning);
                }
                else
                    MessageBox.Show("Заполните поле названия поставщика!", "=(",
                        MessageBoxButton.OK, MessageBoxImage.Error);
            }
            else
                MessageBox.Show("Данный поставщик уже добавлен!", "=(",
                    MessageBoxButton.OK, MessageBoxImage.Error);
        }

        private void NumberValidationTextBox(object sender, TextCompositionEventArgs e)
            => e.Handled = Regex.IsMatch(e.Text, "[^0-9]+");


        private async void BtAddAutopart_OnClick(object sender, RoutedEventArgs e)
        {
            string autopartName = tbAutopartName.Text.Trim();

            if (autopartName != ""
                || tbCount.Text.Trim() != ""
                || tbPrice.Text.Trim() != "")
            {
                if (Decimal.Parse(tbPrice.Text.Trim()) > 0)
                {
                    if (autopartName.Length <= 50)
                    {
                        db.Autoparts.Add(new Autopart
                        {
                            Count = Int32.Parse(tbCount.Text.Trim()),
                            Price = Decimal.Parse(tbPrice.Text.Trim()),
                            AutopartName = autopartName,
                            CategoryId = (int) cbCategory.SelectedValue,
                            ProviderId = (int) cbProvider.SelectedValue
                        });
                        await db.SaveChangesAsync();
                        SetAutopart();
                    }
                    else
                        MessageBox.Show("Название должно быть короче 50 символов!", "=(",
                            MessageBoxButton.OK, MessageBoxImage.Warning);
                }
                else
                    MessageBox.Show("Цена должна быть больше 0!", "=(",
                        MessageBoxButton.OK, MessageBoxImage.Warning);
            }
            else
                MessageBox.Show("Заполните все поля!", "=(",
                    MessageBoxButton.OK, MessageBoxImage.Warning);
        }

        private void Selector_OnSelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (e.Source is TabControl)
            {
                if (tiFinance.IsSelected)
                    SetFinance();
            }
        }
        private void BtnExport_OnClick(object sender, RoutedEventArgs e)
        {
            ExcelPackage.LicenseContext = LicenseContext.NonCommercial;

            using var package = new ExcelPackage();
            var sheet = package.Workbook.Worksheets.Add("Data");
            var accounting = db.Accountings.ToList();

            sheet.Cells["A1"].Value = $"№ п/п";
            sheet.Cells["B1"].Value = $"Дата";
            sheet.Cells["C1"].Value = $"Сумма";
            sheet.Cells["A1:C1"].Style.Font.Bold = true;
            
            decimal FullResult = 0;
            for (int i = 0; i < accounting.Count; i++)
            {
                var report = accounting[i];
                var money = report.Profit == 0 ? report.Expenditure.Value : report.Profit.Value;
                sheet.Cells[$"A{i + 2}"].Value = i + 1;
                sheet.Cells[$"B{i + 2}"].Value = report.RecordDate.Value.Date.ToString("dd MMMM yyyy");
                sheet.Cells[$"C{i + 2}"].Value = money;
                sheet.Cells[$"C{i + 2}"].Style.Font.Color.Indexed = money < 0 ? 2 : 3;
                
                FullResult += money;
            }
            sheet.Cells[$"C{accounting.Count + 2}"].Value = $"Итог на {DateTime.Today:dd.MM.yyyy}: {FullResult}";
            var range = sheet.Cells[$"A1:C{accounting.Count + 2}"];
            range.AutoFitColumns();
            range.Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
            
            //Путь и название будущего файла
            string filePath = $"C:\\Users\\gpav5\\Downloads\\Отчёт-{DateTime.Now.ToString().Replace(":", "-")}.xlsx";
            
            FileInfo fi = new FileInfo(filePath);
            package.SaveAs(fi);
            
            MessageBox.Show("Отчёт сформирован!", "=)", MessageBoxButton.OK);
        }
    }
}<Page x:Class="University.Main.CustomerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:University.Main"
      xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d"
      Title="CustomerPage" d:DesignHeight="450" d:DesignWidth="800">

    <Page.Resources>

        <ResourceDictionary>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="14px" />
                <Setter Property="FontFamily" Value="/Resources/#Stapel" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <Style TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Foreground" Value="#163172" />
                <Setter Property="FontFamily" Value="/Resource/#Inter" />
                <Setter Property="Background" Value="#D6E4F0" />
                <Setter Property="BorderBrush" Value="#D6E4F0" />
            </Style>


            <Style x:Key="ErrorTextBlock" TargetType="TextBlock">
                <Setter Property="Foreground" Value="#F44336" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="FontFamily" Value="/Resources/#Inter" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <Style x:Key="Input" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="material:HintAssist.FontFamily" Value="/Resources/#Inter" />
                <Setter Property="material:HintAssist.HelperTextFontSize" Value="13" />
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="#1E56A0" />
                        <Setter Property="material:HintAssist.Foreground" Value="#1E56A0" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InputCB" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="material:HintAssist.FontFamily" Value="/Resources/#Inter" />
                <Setter Property="material:HintAssist.HelperTextFontSize" Value="13" />
                <Style.Triggers>
                    <Trigger Property="IsSelectionActive" Value="True">
                        <Setter Property="BorderBrush" Value="#1E56A0" />
                        <Setter Property="material:HintAssist.Foreground" Value="#1E56A0" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="#1E56A0" />
                        <Setter Property="material:HintAssist.Foreground" Value="#1E56A0" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TabItemStyle" TargetType="TabItem"
                   BasedOn="{StaticResource MaterialDesignNavigationRailTabItem}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="TextElement.Foreground" Value="#163172" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TabItemCategories" TargetType="TabItem">
                <Setter Property="FontFamily" Value="/Resources/#Inter" />
                <Setter Property="Foreground" Value="#163172" />
                <Setter Property="Background" Value="#eff1f4" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Padding" Value="0 10 0 10" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="Border" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="0,0,-1,0">
                                <Grid>
                                    <Rectangle x:Name="interactive" Opacity="0.3" />
                                    <ContentPresenter HorizontalAlignment="Center" Margin="12,2,12,2"
                                                      x:Name="ContentSite" VerticalAlignment="Center"
                                                      RecognizesAccessKey="True" ContentSource="Header" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="100" />
                                    <Setter Property="Background" Value="#1E56A0" />
                                    <Setter Property="Foreground" Value="#f6f6f6" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="Selector.IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Fill" Value="Black" TargetName="interactive" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5" TargetName="interactive" />
                                    <Setter Property="Fill" Value="Black" TargetName="interactive" />
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Foreground" Value="DarkGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>

    <TabControl
        SelectionChanged="Selector_OnSelectionChanged"
        TabStripPlacement="Left"
        Style="{StaticResource MaterialDesignNavigatilRailTabControl}"
        material:ColorZoneAssist.Mode="Standard"
        Background="#D6E4F0"
        material:ShadowAssist.ShadowDepth="Depth3">

        <TabItem
            Name="tiCatalog"
            Style="{StaticResource TabItemStyle}"
            Header="{material:PackIcon Kind=CarCog, Size=35}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <TabControl
                    material:ColorZoneAssist.Mode="Standard"
                    Background="#D6E4F0"
                    TabStripPlacement="Left"
                    material:ShadowAssist.ShadowDepth="Depth3">
                    <TabItem

                        Style="{StaticResource TabItemCategories}"
                        Header="Запчасти для ТО">

                        <StackPanel
                            Margin="10 0 0 0">
                            <TextBlock
                                Text="Товары"
                                HorizontalAlignment="Center"
                                Foreground="#163172"
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="0 10 0 0" />

                            <ScrollViewer VerticalScrollBarVisibility="Visible"
                                          Height="700">
                                <StackPanel Name="StackTO">

                                </StackPanel>
                            </ScrollViewer>
                        </StackPanel>
                    </TabItem>

                    <TabItem
                        Style="{StaticResource TabItemCategories}"
                        Header="Шины">

                        <StackPanel
                            Margin="10 0 0 0">
                            <TextBlock
                                Text="Товары"
                                HorizontalAlignment="Center"
                                Foreground="#163172"
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="0 10 0 0" />

                            <ScrollViewer VerticalScrollBarVisibility="Visible"
                                          Height="700">
                                <StackPanel Name="StackTire">

                                </StackPanel>
                            </ScrollViewer>
                        </StackPanel>

                    </TabItem>

                    <TabItem
                        Style="{StaticResource TabItemCategories}"
                        Header="Диски">

                        <StackPanel
                            Margin="10 0 0 0">
                            <TextBlock
                                Text="Товары"
                                HorizontalAlignment="Center"
                                Foreground="#163172"
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="0 10 0 0" />

                            <ScrollViewer VerticalScrollBarVisibility="Visible"
                                          Height="700">
                                <StackPanel Name="StackDisc">

                                </StackPanel>
                            </ScrollViewer>
                        </StackPanel>
                    </TabItem>

                    <TabItem
                        Style="{StaticResource TabItemCategories}"
                        Header="Аккумуляторы">

                        <StackPanel
                            Margin="10 0 0 0">
                            <TextBlock
                                Text="Товары"
                                HorizontalAlignment="Center"
                                Foreground="#163172"
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="0 10 0 0" />

                            <ScrollViewer VerticalScrollBarVisibility="Visible"
                                          Height="700">
                                <StackPanel Name="StackBattery">

                                </StackPanel>
                            </ScrollViewer>
                        </StackPanel>
                    </TabItem>

                    <TabItem
                        Style="{StaticResource TabItemCategories}"
                        Header="Жидкости и масла">

                        <StackPanel
                            Margin="10 0 0 0">
                            <TextBlock
                                Text="Товары"
                                HorizontalAlignment="Center"
                                Foreground="#163172"
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="0 10 0 0" />

                            <ScrollViewer VerticalScrollBarVisibility="Visible"
                                          Height="700">
                                <StackPanel Name="StackOil">

                                </StackPanel>
                            </ScrollViewer>
                        </StackPanel>
                    </TabItem>

                    <TabItem
                        Style="{StaticResource TabItemCategories}"
                        Header="Автохимия">

                        <StackPanel
                            Margin="10 0 0 0">
                            <TextBlock
                                Text="Товары"
                                HorizontalAlignment="Center"
                                Foreground="#163172"
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="0 10 0 0" />

                            <ScrollViewer VerticalScrollBarVisibility="Visible"
                                          Height="700">
                                <StackPanel Name="StackChemistry">

                                </StackPanel>
                            </ScrollViewer>
                        </StackPanel>
                    </TabItem>

                    <TabItem
                        Style="{StaticResource TabItemCategories}"
                        Header="Аксессуары">

                        <StackPanel
                            Margin="10 0 0 0">
                            <TextBlock
                                Text="Товары"
                                HorizontalAlignment="Center"
                                Foreground="#163172"
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="0 10 0 0" />

                            <ScrollViewer VerticalScrollBarVisibility="Visible"
                                          Height="700">
                                <StackPanel Name="StackAccessories">

                                </StackPanel>
                            </ScrollViewer>
                        </StackPanel>
                    </TabItem>


                    <TabItem
                        Style="{StaticResource TabItemCategories}"
                        Header="Инструменты">

                        <StackPanel
                            Margin="10 0 0 0">
                            <TextBlock
                                Text="Товары"
                                HorizontalAlignment="Center"
                                Foreground="#163172"
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="0 10 0 0" />

                            <ScrollViewer VerticalScrollBarVisibility="Visible"
                                          Height="700">
                                <StackPanel Name="StackInstruments">

                                </StackPanel>
                            </ScrollViewer>
                        </StackPanel>
                    </TabItem>

                    <TabItem
                        Style="{StaticResource TabItemCategories}"
                        Header="Электроника">

                        <StackPanel
                            Margin="10 0 0 0">
                            <TextBlock
                                Text="Товары"
                                HorizontalAlignment="Center"
                                Foreground="#163172"
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="0 10 0 0" />

                            <ScrollViewer VerticalScrollBarVisibility="Visible"
                                          Height="700">
                                <StackPanel Name="StackElectronics">

                                </StackPanel>
                            </ScrollViewer>
                        </StackPanel>
                    </TabItem>

                    <TabItem
                        Style="{StaticResource TabItemCategories}"
                        Header="Щетки">

                        <StackPanel
                            Margin="10 0 0 0">
                            <TextBlock
                                Text="Товары"
                                HorizontalAlignment="Center"
                                Foreground="#163172"
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="0 10 0 0" />

                            <ScrollViewer VerticalScrollBarVisibility="Visible"
                                          Height="700">
                                <StackPanel Name="StackBrushes">

                                </StackPanel>
                            </ScrollViewer>
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </Grid>
        </TabItem>

        <TabItem
            Name="tiCart"
            Style="{StaticResource TabItemStyle}"
            Header="{material:PackIcon Kind=CartVariant, Size=35}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="8*" />
                </Grid.RowDefinitions>

                <StackPanel
                    Orientation="Horizontal"
                    Margin="10">
                    <TextBlock
                        Name="tbFullName"
                        Foreground="#163172"
                        FontSize="18"
                        FontWeight="Bold"
                        Text=""
                        TextAlignment="Center"
                        VerticalAlignment="Center" />

                    <TextBlock
                        Name="tbPhoneNumber"
                        Margin="20 0 0 0"
                        Text=""
                        Foreground="#1E56A0"
                        FontSize="15"
                        VerticalAlignment="Center" />
                </StackPanel>
                <ScrollViewer
                    VerticalScrollBarVisibility="Visible"
                    Height="700"
                    Grid.Row="1">
                    <StackPanel Name="StackCart">

                    </StackPanel>
                </ScrollViewer>
                
                <Button
                    Click="ButtonBase_OnClick"
                    FontFamily="/Resources/#Inter"
                    BorderBrush="#163172"
                    Foreground="#f6f6f6"
                    Background="#1E56A0"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="Оплатить"/>


            </Grid>
        </TabItem>
    </TabControl>
</Page>using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using Microsoft.EntityFrameworkCore;
using University.Cards;
using University.Database;
using University.Helper;

namespace University.Main
{
    public partial class CustomerPage : Page
    {
        private UniversityContext db;
        private Customer _LoggedCustomer;

        public CustomerPage(Customer loggedCustomer)
        {
            InitializeComponent();
            _LoggedCustomer = loggedCustomer;
            db = new UniversityContext();
            DataContext = this;
            tbFullName.Text = $"{_LoggedCustomer.Surname} {_LoggedCustomer.Name} {_LoggedCustomer.Patronymic}";
            tbPhoneNumber.Text = $"{_LoggedCustomer.PhoneNumber}";

            SetProduct();
            SetProductInCart();
        }

        private void SetProduct()
        {
            StackTO.Children.Clear();
            StackDisc.Children.Clear();
            StackTire.Children.Clear();
            StackBattery.Children.Clear();
            StackOil.Children.Clear();
            StackChemistry.Children.Clear();
            StackAccessories.Children.Clear();
            StackInstruments.Children.Clear();
            StackElectronics.Children.Clear();
            StackBrushes.Children.Clear();


            foreach (var autopart in db.Autoparts
                         .Include(a => a.Category)
                         .Include(a => a.Provider).ToList())
            {
                if (autopart.Count > 0)
                {
                    ProductCard cardProduct = new ProductCard(_LoggedCustomer)
                    {
                        Autopart = autopart,
                        AutopartName = autopart.AutopartName,
                        ProviderName = autopart.Provider.ProviderName,
                        MaxCount = autopart.Count,
                        Price = autopart.Price
                    };
                    switch (autopart.CategoryId)
                    {
                        case 1:
                            StackTO.Children.Add(cardProduct);
                            break;
                        case 2:
                            StackTire.Children.Add(cardProduct);
                            break;
                        case 3:
                            StackDisc.Children.Add(cardProduct);
                            break;
                        case 4:
                            StackBattery.Children.Add(cardProduct);
                            break;
                        case 5:
                            StackOil.Children.Add(cardProduct);
                            break;
                        case 6:
                            StackChemistry.Children.Add(cardProduct);
                            break;
                        case 7:
                            StackAccessories.Children.Add(cardProduct);
                            break;
                        case 8:
                            StackInstruments.Children.Add(cardProduct);
                            break;
                        case 9:
                            StackElectronics.Children.Add(cardProduct);
                            break;
                        case 10:
                            StackBrushes.Children.Add(cardProduct);
                            break;
                    }
                }
            }
        }

        private async void SetProductInCart()
        {
            StackCart.Children.Clear();
            //Заказ пользователя, который зашел в систему
            var order = await db.Orders.FirstOrDefaultAsync(order => order.CustomerId == _LoggedCustomer.IdCustomer);
            //Зааказ вместе с запчастями
            var combOrders = db.CombinationOrders.Where(c => c.OrdersId == order.IdOrders);

            foreach (var combinOrder in combOrders
                         .Include(comb => comb.Autopart)
                         .Include(comb => comb.Orders)
                         .ThenInclude(order1 => order1.Customer).ToList())
            {
                CartItem itemInCart = new CartItem()
                {
                    AutopartName = combinOrder.Autopart.AutopartName,
                    MaxCount = combinOrder.Autopart.Count,
                    SelectedCount = combinOrder.Count,
                    Price = combinOrder.Autopart.Price,
                    FullPrice = combinOrder.Count * combinOrder.Autopart.Price,
                    _CombinationOrder = combinOrder
                };
                StackCart.Children.Add(itemInCart);
            }
        }

        private void Selector_OnSelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (e.Source is TabControl)
            {
                if (tiCatalog.IsSelected)
                    SetProduct();
                else if (tiCart.IsSelected)
                    SetProductInCart();    
            }
        }

        private async void ButtonBase_OnClick(object sender, RoutedEventArgs e)
        {
            try
            {
                var order = await db.Orders.FirstOrDefaultAsync(order =>
                    order.CustomerId == _LoggedCustomer.IdCustomer);
                if (order == null)
                    MessageBox.Show("Вы еще не добавили ни одного товара в корзину!", "=)",
                        MessageBoxButton.OK, MessageBoxImage.Information);
                else
                {
                    //Вот здесь при изменении числа кнопками в корзине не меняется значение в таблице
                    var combOrders = db.CombinationOrders.Where(c => c.OrdersId == order.IdOrders);
                    if (!combOrders.Any())
                    {
                        MessageBox.Show("Вы еще не добавили ни одного товара в корзину!", "=)",
                            MessageBoxButton.OK, MessageBoxImage.Information);
                    }
                    else
                    {
                        decimal FullPrice = 0;
                        foreach (var combinOrder in combOrders
                                     .Include(comb => comb.Autopart)
                                     .Include(comb => comb.Orders)
                                     .ThenInclude(order1 => order1.Customer).ToList())
                        {
                            //Удаление из таблицы Autopats количества запчастей, которое указано в табл. Combinatioin_Order
                            Autopart autopart =
                                await db.Autoparts.FirstOrDefaultAsync(a => a.IdAutopart == combinOrder.AutopartId);
                            //Вычитаем купленное количество запчастей
                            autopart.Count -= combinOrder.Count;
                            if (autopart.Count < 0) autopart.Count = 0;

                            //Добавляем цену товара в переменную
                            FullPrice += autopart.Price * combinOrder.Count;


                            //Удаление из таблицы Combinatioin_Order всех товаров
                            db.CombinationOrders.Remove(combinOrder);

                            //Убираем элемнт товара с экрана
                            StackCart.Children.Clear();
                            
                            order.OrdersDate = DateTime.Today;
                            await db.SaveChangesAsync();
                        }

                        //Добавление в таблицу Accounting записи с профитом
                        db.Accountings.Add(new Accounting()
                        {
                            Profit = FullPrice
                        });
                        await db.SaveChangesAsync();
                        MessageBox.Show("Заказ оплачен, ожидайте СМС на телефон с информацией о заказе.", "=)",
                            MessageBoxButton.OK);
                    }
                }
            }
            catch
            {
                MessageBox.Show("Технические шоколадки...", "=/", MessageBoxButton.OK,MessageBoxImage.Warning);
            }
        }
    }
}﻿<Window x:Class="University.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:University"
        xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"          
        Title="Авторизация" Height="450" Width="800"
        WindowState="Maximized" 
        Loaded="MainWindow_OnLoaded">
   
    <Frame Name="Frame" NavigationUIVisibility="Hidden"></Frame>
   

</Window>
﻿using System.Windows;

namespace University
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void MainWindow_OnLoaded(object sender, RoutedEventArgs e)
        {
            Frame.Content = new Login.Login(this);
        }
    }
}
